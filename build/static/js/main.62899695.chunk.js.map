{"version":3,"sources":["services/contacts-api.js","Redux/contacts/contacts-actions.jsx","Redux/contacts/contacts-operations.jsx","Redux/contacts/contacts-selectors.jsx","Components/ContactsList.jsx","Components/FilterInput.jsx","Components/PhoneBook.jsx","Components/Section.jsx","App.js","Redux/contacts/contacts-reducer.jsx","Redux/store.jsx","index.js"],"names":["axios","defaults","baseURL","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","api","deleteContact","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","isLoading","getShownContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactsList","useDispatch","useSelector","contactsSelectors","useEffect","contactsOperations","length","className","map","type","onClick","FilterInput","value","onChange","e","contactsActions","target","PhoneBook","useState","setName","setNumber","handleChange","resetState","onSubmit","preventDefault","placeholder","pattern","title","Section","children","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62899695.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport function fetchContacts() {\r\n  return axios.get('/contacts');\r\n}\r\n\r\nexport function addContact(contact) {\r\n  return axios.post('/contacts', contact);\r\n}\r\n\r\nexport function deleteContact(id) {\r\n  return axios.delete(`/contacts/${id}`);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import * as api from '../../services/contacts-api';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  api\r\n    .fetchContacts()\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  api\r\n    .addContact(contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  api\r\n    .deleteContact(id)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.isLoading;\r\n\r\nexport const getShownContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../Redux/contacts';\n\nfunction ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getShownContacts);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  if (contacts.length) {\n    return (\n      <ul className=\"contactList\">\n        {contacts.map(({ id, name, number }) => (\n          <li className=\"contactItem\" key={id}>\n            <p>\n              {name} : {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(contactsOperations.deleteContact(id))}\n              className=\"deleteContactButton\"\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n  } else {\n    return <h3>Add new contacts</h3>;\n  }\n}\n\nexport default ContactsList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../Redux/contacts';\n\nfunction FilterInput() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n\n  const filterInput = e => {\n    dispatch(contactsActions.filterContact(e.target.value));\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={filter} name=\"filter\" onChange={filterInput} />\n    </label>\n  );\n}\n\nexport default FilterInput;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { contactsOperations } from '../Redux/contacts';\n\nfunction PhoneBook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    dispatch(contactsOperations.addContact(name, number));\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={submitForm}>\n      <label className=\"label name\">\n        Enter name\n        <input\n          type=\"text\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          placeholder=\"Jony Depp\"\n        />\n      </label>\n      <label className=\"label number\">\n        Еnter number\n        <input\n          type=\"tel\"\n          value={number}\n          name=\"number\"\n          onChange={handleChange}\n          placeholder=\"Number (7 to 9 digits)\"\n          pattern=\"[0-9]{7,9}\"\n          title=\"7 to 9 digits allowed\"\n        />\n      </label>\n      <button type=\"submit\" className=\"addContact\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default PhoneBook;\n","import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <section className=\"section\">\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import ContactsList from './Components/ContactsList';\nimport FilterInput from './Components/FilterInput';\nimport PhoneBook from './Components/PhoneBook';\nimport Section from './Components/Section';\nimport './Components/styles.css';\n\nfunction App() {\n  return (\n    <div className=\"main-container\">\n      <Section title=\"Phonebook\">\n        <PhoneBook />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterInput />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}